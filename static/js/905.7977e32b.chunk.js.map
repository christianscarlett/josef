{"version":3,"file":"static/js/905.7977e32b.chunk.js","mappings":"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","sources":["model/Image.tsx","model/Model.tsx","model/k.worker.tsx","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["export interface OnImageDataLoaded {\n  (imageData: ImageData, src: string): void;\n}\n\nexport const getDataFromFiles = async function (\n  files: FileList | null,\n  callback: OnImageDataLoaded\n) {\n  if (files != null) {\n    const filesArray = Array.from(files);\n    const file = filesArray.at(0);\n    if (file !== undefined) {\n      getDataFromFile(file, callback);\n    }\n  }\n};\n\nconst getDataFromFile = async function (\n  file: File,\n  callback: OnImageDataLoaded\n) {\n  const fileReader = new FileReader();\n  fileReader.onload = function () {\n    const result = fileReader.result;\n    if (typeof result === \"string\") {\n      getDataFromFileResult(result, callback);\n    }\n  };\n  fileReader.readAsDataURL(file);\n};\n\nconst IMG_CANVAS_SIZE = 512;\n\nconst getDataFromFileResult = async function (\n  result: string,\n  callback: OnImageDataLoaded\n) {\n  const img = new Image();\n  img.onload = function () {\n    const canvas = document.createElement(\"canvas\");\n    // Limit the size of the canvas so we don't have to process too much data later on\n    if (img.width > img.height) {\n      canvas.width = IMG_CANVAS_SIZE;\n      canvas.height = Math.floor((IMG_CANVAS_SIZE * img.height) / img.width);\n    } else {\n      canvas.height = IMG_CANVAS_SIZE;\n      canvas.width = Math.floor((IMG_CANVAS_SIZE * img.width) / img.height);\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx !== null) {\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      callback(ctx.getImageData(0, 0, canvas.width, canvas.height), result);\n    }\n  };\n  img.src = result;\n};\n\nexport const formatData = function (imageData: ImageData): number[][] {\n  const rgbaData = imageData.data;\n  const rgbData: number[][] = [];\n  for (let i = 0; i < rgbaData.length; i += 4) {\n    const rgb = [rgbaData[i], rgbaData[i + 1], rgbaData[i + 2]];\n    rgbData.push(rgb);\n  }\n  return rgbData;\n};\n","import { kmeans } from \"ml-kmeans\";\nimport { formatData } from \"./Image\";\n\nexport const generateRandomColor = function (): string {\n  // https://stackoverflow.com/questions/5092808/how-do-i-randomly-generate-html-hex-color-codes-using-javascript\n  return \"#\" + ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, \"0\");\n};\n\nexport const generateRandomPalette = function (numColors: number): string[] {\n  const palette: string[] = [];\n  for (let i = 0; i < numColors; i++) {\n    palette.push(generateRandomColor());\n  }\n  return palette;\n};\n\nexport const updateRandomPalette = function (\n  oldPalette: string[],\n  newNumColors: number\n): string[] {\n  const newPalette: string[] = [];\n\n  for (let i = 0; i < newNumColors; i++) {\n    if (i < oldPalette.length) {\n      newPalette.push(oldPalette[i]);\n    } else {\n      newPalette.push(generateRandomColor());\n    }\n  }\n\n  return newPalette;\n};\n\nexport const CANVAS_SIZE = 512;\n\nexport const kClusterImageData = function (\n  data: number[][],\n  k: number\n): number[][] {\n  const result = kmeans(data, k, {});\n  return result.centroids;\n};\n\nexport const getPaletteFromRgb = function (rgb: number[][]): string[] {\n  const palette: string[] = [];\n  for (const pixel of rgb) {\n    const r = pixel.at(0);\n    const g = pixel.at(1);\n    const b = pixel.at(2);\n    if (r !== undefined && g !== undefined && b !== undefined) {\n      palette.push(rgbToHex(Math.floor(r), Math.floor(g), Math.floor(b)));\n    }\n  }\n  return palette;\n};\n\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\nconst componentToHex = function (c: number): string {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n};\n\n/** Assumes integer inputs */\nconst rgbToHex = function (r: number, g: number, b: number): string {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n};\n\nexport const generatePaletteFromImageData = function (\n  imageData: ImageData,\n  numColors: number\n): string[] {\n  const data = formatData(imageData);\n  const clusters = kClusterImageData(data, numColors);\n  return getPaletteFromRgb(clusters);\n};\n","import { generatePaletteFromImageData } from \"./Model\";\n\nexport default onmessage = function (e: MessageEvent<any>) {\n  const data = e.data as unknown as KWorkerInput;\n  if (data !== null) {\n    const result = generatePaletteFromImageData(data.imageData, data.numColors);\n    const output: KWorkerOutput = {\n      palette: result,\n    };\n    this.postMessage(output);\n  }\n};\n\nexport interface KWorkerInput {\n  imageData: ImageData;\n  numColors: number;\n}\n\nexport interface KWorkerOutput {\n  palette: string[];\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [758], () => (__webpack_require__(905)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"c698a51a\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/josef/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t905: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkjosef\"] = self[\"webpackChunkjosef\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(758).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","generatePaletteFromImageData","imageData","numColors","data","rgbaData","rgbData","i","rgb","push","formatData","clusters","k","kmeans","centroids","kClusterImageData","palette","pixel","at","undefined","Math","floor","getPaletteFromRgb","onmessage","e","output","this","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","d","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","p","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}